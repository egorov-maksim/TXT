GIT Homework 1

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.

Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON. 
// go to github.com > repositories > new > JSON
 5. Клонировать репозиторий JSON на локальный компьютер.
// git clone https://github.com/egorov-maksim/JSON.git 
 6. Внутри локального JSON создать файл “new.json”.
// cd JSON > vim new.json > insert > enter { "Some information" } > Esc > :wq
 7. Добавить файл под гит.
// git add new.json
 8. Закоммитить файл.
// git commit -m "create new.json"
 9. Отправить файл на внешний GitHub репозиторий.
// git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
// vim new.json > insert > edit file with 
{
        "FirstName": "Maksim",
        "LastName": "Egorov",
        "Age": 27,
        "NumOfPets": 1,
        "Salary": "3000000"
}
> Esc > :wq
 11. Отправить изменения на внешний репозиторий.
// git commit -am "edited new.json" > git push
 12. Создать файл preferences.json
// touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
// vim preferences.json > insert > enter 
{
        "FavMovie": "The Truman Show",
        "FavSeries": "Squid Game",
        "FavFood": "Pizza",
        "FavSeason": "Summer",
        "FavCountry": "Spain"
} 
> Esc > :wq
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
// vim skills.json > insert > enter skills > Esc > :wq
 15. Отправить сразу 2 файла на внешний репозиторий.
// git add preferences.json skills.json 
// git add .
> git commit -m "new files adding > git push
 16. На веб интерфейсе создать файл bug_report.json.
// on GitHub.com go to JSON repository > click on add file drop-down menu > click on "create new file"
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
// click on "Commit new file"
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
// click on "pen" icon to modify file 
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
// click on Commit changes
 20. Синхронизировать внешний и локальный репозиторий JSON
// git pull



XML
 21. Создать внешний репозиторий c названием XML.
// go to github.com > repositories > new > XML
 22. Клонировать репозиторий XML на локальный компьютер.
// git clone git@github.com:egorov-maksim/XML.git
 23. Внутри локального XML создать файл “new.xml”.
// touch new.xml
 24. Добавить файл под гит.
// git add new.xml
 25. Закоммитить файл.
// git commit -m "new.xml created"
 26. Отправить файл на внешний GitHub репозиторий.
// git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
// adding to file 
<xml>
	<FirstName>Maksim</FirstName>
	<SecondName>Egorov</SecondName>
	<Age>27</Age>
	<NumOfPets>1</NumOfPets>
	<Salary>"30000000"</Salary>
 28. Отправить изменения на внешний репозиторий.
// git commit -am "edited new.xml" > git push
 29. Создать файл preferences.xml
// touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
// edit file using VScode input 
<xml>
	<Movie>The Truman Show</Movie>
	<Series>Squid Game</Series>
	<Food>Pizza</Food>
	<Season>Summer</Season>
	<Country>Spain</Country>
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
// touch and edit file using XML formatting
 32. Сделать коммит в одну строку.
// git add . && git commit -m "add and commit two files in one command"
 33. Отправить сразу 2 файла на внешний репозиторий.
// git push
 34. На веб интерфейсе создать файл bug_report.xml.
// same as json
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
// same as json
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
// same as json
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
// same as json
 38. Синхронизировать внешний и локальный репозиторий XML
// git pull


TXT
 1. Создать внешний репозиторий c названием TXT.
// repeat steps from json and xml
 2. Клонировать репозиторий TXT на локальный компьютер.
// git clone https://github.com/egorov-maksim/TXT.git
 3. Внутри локального TXT создать файл “new.txt”.
// vim new.txt
 4. Добавить файл под гит.
// git add
 5. Закоммитить файл.
// git commit -m "Commit file"
 6. Отправить файл на внешний GitHub репозиторий.
// git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
// Same steps as json and xml
 8. Отправить изменения на внешний репозиторий.
// git commit -am "edited new.txt"
 9. Создать файл preferences.txt
// vim preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
// adding info to the file
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
// vim skills.txt > type in text > :wq
 12. Сделать коммит в одну строку.
// git add preferences.txt skills.txt && git commit -m "add files"
 13. Отправить сразу 2 файла на внешний репозиторий.
// git push
 14. На веб интерфейсе создать файл bug_report.txt.
// same as xml
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
// same as xml
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
// same as xml
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
// same as xml
 18. Синхронизировать внешний и локальный репозиторий TXT
// git pull